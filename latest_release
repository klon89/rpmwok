#!/usr/bin/env node

/*
 * check latest github releases and update version number in spec files
 *
 * usage: ./latest_release package-name
 */

const fs = require("fs");
const https = require('https');
const path = require("path");

const packageName = process.argv[2];
const specFilePath = path.join(__dirname, 'spec', packageName, packageName + '.spec');
const specFileContent = fs.readFileSync(specFilePath, { encoding: 'utf-8' });

const githubMatch = /github.com\/([\w-]+)\/([\w-]+)/.exec(specFileContent);

if (!githubMatch) {
    console.log("No GitHub URL found in spec file " + specFilePath);
    process.exit(1);
}

const githubOwner = githubMatch[1];
const githubRepo = githubMatch[2];

https.get(
    `https://api.github.com/repos/${githubOwner}/${githubRepo}/releases/latest`,
    { headers: { 'User-Agent': 'Mozilla/5.0' } },
    (res) => {
        let data = '';

        // A chunk of data has been recieved.
        res.on('data', (chunk) => {
            data += chunk;
        });

        // The whole response has been received. Print out the result.
        res.on('end', () => {
            const version = JSON.parse(data).tag_name.replace('v', '');
            const newSpecFileContent = specFileContent.replace(/Version:\s+.+/, 'Version:        ' + version);
            if (newSpecFileContent !== specFileContent) {
                fs.writeFileSync(specFilePath, newSpecFileContent, { encoding: 'utf-8' });
            }
        });

    }).on("error", (err) => {
        console.log("Error: " + err.message);
    });